package integration

import (
	"encoding/hex"
	"fmt"
	"github.com/kaifei-bianjie/msg-parser/codec"
	"github.com/kaifei-bianjie/msg-parser/utils"
)

func (s IntegrationTestSuite) TestMT() {
	cases := []SubTest{
		{
			"MTIssueDenom",
			MTIssueDenom,
		},
		{
			"MTTransferDenom",
			MTTransferDenom,
		},
		{
			"MintMT",
			MintMT,
		},
	}

	for _, t := range cases {
		s.Run(t.testName, func() {
			t.testCase(s)
		})
	}
}

func MTIssueDenom(s IntegrationTestSuite) {
	txBytes, err := hex.DecodeString
	if err != nil {
		s.T().Log(err.Error())
		panic(err)
	}

	authTx, err := codec.GetSigningTx(txBytes)
	if err != nil {
		s.T().Log(err.Error())
		panic(err)
	}

	for _, msg := range authTx.GetMsgs() {
		if mtDoc, ok := s.Mt.HandleTxMsg(msg); ok {
			fmt.Println(utils.MarshalJsonIgnoreErr(mtDoc))
		}
	}
}

func MTTransferDenom(s IntegrationTestSuite) {
	txBytes, err := hex.DecodeString
	if err != nil {
		s.T().Log(err.Error())
		panic(err)
	}

	authTx, err := codec.GetSigningTx(txBytes)
	if err != nil {
		s.T().Log(err.Error())
		panic(err)
	}

	for _, msg := range authTx.GetMsgs() {
		if mtDoc, ok := s.Mt.HandleTxMsg(msg); ok {
			fmt.Println(utils.MarshalJsonIgnoreErr(mtDoc))
		}
	}
}

func MintMT(s IntegrationTestSuite) {
	txBytes, err := hex.DecodeString
	if err != nil {
		s.T().Log(err.Error())
		panic(err)
	}

	authTx, err := codec.GetSigningTx(txBytes)
	if err != nil {
		s.T().Log(err.Error())
		panic(err)
	}

	for _, msg := range authTx.GetMsgs() {
		if mtDoc, ok := s.Mt.HandleTxMsg(msg); ok {
			fmt.Println(utils.MarshalJsonIgnoreErr(mtDoc))
		}
	}
}
